let robux = 100;
let dep = 100;
const symbols = ["üçí", "üçã", "üçä", "üçá", "‚≠ê", "üíé"];

function plus(){

  
  dep += 10
  updateBalance()
}

function min(){
  
  dep -= 10
  updateBalance()
}
function updateBalance() {
  document.getElementById("depValue").textContent = dep;
  document.getElementById("robux").textContent = robux;
}

function showGame(game) {
  document.querySelectorAll(".game").forEach(div => div.classList.add("hidden"));
  document.getElementById("menu").classList.add("hidden");
  document.getElementById(`${game}Game`).classList.remove("hidden");
}

function goToMenu() {
  document.querySelectorAll(".game").forEach(div => div.classList.add("hidden"));
  document.getElementById("menu").classList.remove("hidden");
}

function spin() {
  
  if (robux < dep) return alert("–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ —Ä–æ–±—É–∫—Å—ñ–≤!");
  robux -= dep;
  updateBalance();

  const s1 = symbols[Math.floor(Math.random() * symbols.length)];
  const s2 = symbols[Math.floor(Math.random() * symbols.length)];
  const s3 = symbols[Math.floor(Math.random() * symbols.length)];

  document.getElementById("slot1").textContent = s1;
  document.getElementById("slot2").textContent = s2;
  document.getElementById("slot3").textContent = s3;

  const result = document.getElementById("slotResult");

  if (s1 === s2 && s2 === s3) {
    robux += dep * 11;
    result.textContent = "üéâ –í–∏–≥—Ä–∞—à + " + dep * 10 + " —Ä–æ–±—É–∫—Å—ñ–≤!";
    result.style.animation = "flashWin 1s ease";
    setTimeout(() => result.style.animation = "", 1000);
  } else {
    result.textContent = "üò¢ –ù—ñ—á–æ–≥–æ –Ω–µ –≤–∏–ø–∞–ª–æ.";
  }

  updateBalance();
}

function playRoulette(choice) {
  if (robux < 20) return alert("–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ —Ä–æ–±—É–∫—Å—ñ–≤!");
  robux -= 20;

  const result = Math.random() < 0.5 ? '—á–µ—Ä–≤–æ–Ω–µ' : '—á–æ—Ä–Ω–µ';
  const msg = result === choice ? "üéâ –í–∏ –≤–∏–≥—Ä–∞–ª–∏ 80 —Ä–æ–±—É–∫—Å—ñ–≤!" : "‚ùå –í–∏ –ø—Ä–æ–≥—Ä–∞–ª–∏.";

  if (result === choice) robux += 80;

  const res = document.getElementById("rouletteResult");
  res.textContent = `–í–∏–ø–∞–ª–æ: ${result}. ${msg}`;
  res.style.animation = "flashWin 1s ease";
  setTimeout(() => res.style.animation = "", 1000);
  updateBalance();
}

function buyRobux(amount) {
  robux += amount;
  updateBalance();
  alert(`+${amount} —Ä–æ–±—É–∫—Å—ñ–≤ –æ—Ç—Ä–∏–º–∞–Ω–æ!`);
}

let playerCards = [], dealerCards = [];

function drawCard() {
  return Math.floor(Math.random() * 10) + 2;
}

function startBlackjack() {
  if (robux < 20) return alert("–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ —Ä–æ–±—É–∫—Å—ñ–≤!");
  robux -= 20;
  playerCards = [drawCard(), drawCard()];
  dealerCards = [drawCard(), drawCard()];
  document.getElementById("blackjackResult").textContent = "";
  renderBlackjack();
  updateBalance();
}

function renderBlackjack() {
  document.getElementById("blackjackPlayer").textContent = `–í–∞—à—ñ –∫–∞—Ä—Ç–∏: ${playerCards.join(", ")} (–°—É–º–∞: ${sum(playerCards)})`;
  document.getElementById("blackjackDealer").textContent = `–ö–∞—Ä—Ç–∏ –¥–∏–ª–µ—Ä–∞: ${dealerCards.join(", ")} (–°—É–º–∞: ${sum(dealerCards)})`;
}

function sum(cards) {
  return cards.reduce((a, b) => a + b, 0);
}

function hit() {
  if (!playerCards.length) return;
  playerCards.push(drawCard());
  renderBlackjack();
  if (sum(playerCards) > 21) {
    document.getElementById("blackjackResult").textContent = "‚ùå –ü–µ—Ä–µ–±—ñ—Ä! –í–∏ –ø—Ä–æ–≥—Ä–∞–ª–∏.";
    playerCards = [];
    dealerCards = [];
  }
}

function stand() {
  if (!playerCards.length) return;
  while (sum(dealerCards) < 17) dealerCards.push(drawCard());

  const pSum = sum(playerCards), dSum = sum(dealerCards);
  let result = "";

  if (dSum > 21 || pSum > dSum) {
    robux += 60;
    result = "üéâ –í–∏ –≤–∏–≥—Ä–∞–ª–∏! +60 —Ä–æ–±—É–∫—Å—ñ–≤";
  } else if (pSum < dSum) {
    result = "‚ùå –í–∏ –ø—Ä–æ–≥—Ä–∞–ª–∏.";
  } else {
    robux += 20;
    result = "ü§ù –ù—ñ—á–∏—è. –ü–æ–≤–µ—Ä–Ω–µ–Ω–æ —Å—Ç–∞–≤–∫—É.";
  }

  document.getElementById("blackjackResult").textContent = result;
  updateBalance();
  playerCards = [];
  dealerCards = [];
  renderBlackjack();
}
